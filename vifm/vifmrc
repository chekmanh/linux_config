" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window


filetype *.opus,*.wav,*.wma,*.aac,*.mp3,*.og[agx],
      \*.m4a
      \ mpv --no-video %f

filetype *.flac,*.wma,*.ape,*.ac3,*.spx,
      \*.avi,*.mp4,*.wmv,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
      \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
      \*.as[fx],*.m2ts
      \ mpv %f &> /dev/null &

filetype *.pdf,*.djvu
      \ zathura %f 2> /dev/null &

filetype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,*.webp
      \ feh %f &

filetype *.xlsx,*.odp,*.pptx
      \ libreoffice %f &> /dev/null &

filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.zip,
      \*.jar,*.war,*.ear,*.oxt,*.rar,*.7z,*.iso
      \ atool -x %c

filetype *.txt,*.html,*.ipe,*.php,*.dat,*.bat,*.srt,*.ics
      \ vim %f

filetype *.tex
      \ vim --servername vim %f

filetype *.ggb
      \ geogebra %f &> /dev/null &

filetype * xdg-open %f

fileviewer *.apk,*.vtt
      \ echo "Application\n"
fileviewer *.aux,*.bcf,*.blg,*.bbl
      \ echo " LaTeX\n"
" fileviewer *.html,*.htm,*.links,*.lynx
"       \ echo "Internet\n"
fileviewer *.[1-8] man 
      \ echo "man\n"

if $VIFMIMG == 1 
  fileviewer *.pdf
        \ /home/chelz/.config/vifm/scripts/vifmimg pdfpreview %px %py %pw %ph %c
        \ %pc
        \ /home/chelz/.config/vifm/scripts/vifmimg clear
  " navigate pdf preview
  map J :!/home/chelz/.config/vifm/scripts/vifmimg inc<CR>
  map K :!/home/chelz/.config/vifm/scripts/vifmimg dec<CR>

  fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.xpm,*.webp
        \ /home/chelz/.config/vifm/scripts/vifmimg draw %px %py %pw %ph %c
        \ %pc
        \ /home/chelz/.config/vifm/scripts/vifmimg clear
  fileviewer *.gif
        \ /home/chelz/.config/vifm/scripts/vifmimg gifpreview %px %py %pw %ph %c
        \ %pc
        \ /home/chelz/.config/vifm/scripts/vifmimg clear
  fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
        \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx
        \ /home/chelz/.config/vifm/scripts/vifmimg videopreview %px %py %pw %ph %c
        \ %pc
        \ /home/chelz/.config/vifm/scripts/vifmimg clear
  fileviewer <audio/*>
        \ /home/chelz/.config/vifm/scripts/vifmimg audiopreview %px %py %pw %ph %c
        \ %pc
        \ /home/chelz/.config/vifm/scripts/vifmimg clear
  " *.ttf
  fileviewer <font/*>
        \ /home/chelz/.config/vifm/scripts/vifmimg fontpreview %px %py %pw %ph %c
        \ %pc
        \ /home/chelz/.config/vifm/scripts/vifmimg clear
        
else
  fileviewer *.pdf
        \ pdftotext %c -

  fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,*.webp
        \*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
        \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx
        \ mediainfo %c
  fileviewer <audio/*>
        \ mediainfo %c

endif

fileviewer *.sha256,*.sha512,*.md5*,*.sha1
      \ echo "Hash\n"
fileviewer *.part
      \ echo "part\n"
fileviewer *.asc
      \ echo "asc\n"
fileviewer *.torrent
      \ echo "Torrent\n"
fileviewer *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.zip,
      \*.jar,*.war,*.ear,*.oxt,*.rar,*.7z,*.iso,*.ggb
      \ echo "Archive\n"
fileviewer *.ssh
      \ echo "ssh\n"
fileviewer *.ftp
      \ echo "ftp\n"
fileviewer *.doc,*.docx
      \ echo "docx\n"


nnoremap guu :cd ~/dl/trash<cr>
nnoremap <silent> L :!~/.local/shortcuts/swallow xdg-open %c<cr>
vnoremap <silent> L :!~/.local/shortcuts/swallow xdg-open %f<cr>
nnoremap <silent> <c-l> :!~/.local/shortcuts/xdokill xdg-open %c<cr>
vnoremap <silent> <c-l> :!~/.local/shortcuts/xdokill xdg-open %f<cr>


nnoremap r :!dragon -a -x %f<cr>
vnoremap r :!dragon -a -x %f<cr>

map e <nop>
" nnoremap x :!./%c<cr>
nnoremap = f
vnoremap = f
nnoremap f =<c-u>
vnoremap f =<c-u>
vnoremap i :!sxiv %f<cr>
" faster navigation
nnoremap <wait> gcb :cd ~/.config/bash<cr>
nnoremap gcc :cd ~/.config/<cr>
nnoremap gca :cd ~/.cache/<cr>
nnoremap gcf :cd ~/.config/vifm<cr>
nnoremap gci :cd ~/.config/important<cr>
nnoremap gcv :cd ~/.config/vim<cr>
nnoremap gcx :cd ~/.config/xbindkeys<cr>
nnoremap gcz :cd ~/.config/zsh<cr>

nnoremap <wait> gdd :cd ~/doc<cr>
nnoremap gdl :cd ~/dl<cr>
nnoremap gdr :cd ~/.cache/send_to_remarkable<cr>

nnoremap <wait> geb :cd ~/external/bigbig/ | view! | view<cr>
nnoremap geu :cd ~/external/usb1 | view! | view<cr>


nnoremap <wait> gpp :cd ~/doc/code/<cr>
nnoremap <wait> gpa :cd ~/progs/aur/<cr>

nnoremap <wait> gsd :cd ~/doc/Studium/Documente<cr>
nnoremap gss :cd ~/doc/Arbeit/<cr>
nnoremap gsm :cd ~/doc/Arbeit/Matching/<cr>
nnoremap gsn :cd ~/doc/Arbeit/Network/<cr>
nnoremap gsv :cd ~/doc/Arbeit/Vrp/<cr>

nnoremap <wait> gtt :cd ~/.local/share/Trash/files/<cr>
nnoremap gtv :cd ~/.local/share/vifm/Trash/<cr>

nnoremap gh :cd ~/<cr>
nnoremap gi :cd ~/img | view! | view<cr>
nnoremap gmd :cd ~/music<cr>
nnoremap gmm :cd ~/music<cr>:!/usr/bin/mpv lofi.opus --volume=20 --no-resume-playback<cr>
nnoremap gsy :cd ~/vid/Yt<cr>
nnoremap <wait> gx :cd ~/.local/bin<cr>
nnoremap gl :cd ~/.local/<cr>
nnoremap gy :cd ~/vid/Yt/new<cr>

" faster editing
nnoremap <wait> va :edit ~/.config/bash/aliases<cr>
nnoremap vh :edit ~/.local/share/zsh/zsh_history<cr>
nnoremap vbc :edit ~/.config/bash/bashrc<cr>
nnoremap vfc :write | edit $MYVIFMRC | restart<cr>
nnoremap vic :edit ~/.config/i3/config<cr>
nnoremap vm :edit ~/.config/mimeapps.list<cr>
nnoremap vp :edit ~/.config/bash/profile<cr>
nnoremap vt :edit ~/doc/home/terminalcommands<cr>
nnoremap vvc :!vim -c "Erc"<cr>
nnoremap vxc :edit ~/.config/xbindkeys/xbindkeysrc<cr>
nnoremap vzc :edit ~/.config/zsh/.zshrc<cr>


mark p ~/progs/

noremap gg ggj
command NewLatexArticle :!cp ~/doc/Latex/articleTemplate.tex %a.tex
command Link :!ln -s %F .
" command Linkdl :!ln -s %f:p ~/dl
command S :sync
command R :!rename -ia ' ' '_' %f
command C :!cp %C clion.cpp

nnoremap t :!$TERMINAL &>/dev/null &<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap A cW
nnoremap a cw
nnoremap ciw cW<c-u>
nnoremap ciW cw<c-u>
nnoremap cw cW
nnoremap cW cw
" bulk rename
vnoremap I cw
vnoremap A cw

" show hidden
nnoremap <bs> zazOzr
" mark an move
nnoremap <space> tj
nnoremap q :q<cr>
nnoremap Q :cq<cr>
nnoremap s :!
vnoremap s :!
nnoremap - ;
nnoremap <up> {
nnoremap <down> }

nnoremap H Hj

nnoremap bg :!feh -B"#000000" --bg-fill %c && mv ~/.fehbg ~/.cache/fehbg<cr>

set wrap
" ------------------------------------------------------------------------------

"  The default editor is vim.
set vicmd=vim

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.

set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set shell=/bin/bash

set trash

" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

" set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Selected color scheme

colorscheme solarized

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%d/%m\ %H:%M

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

set ignorecase
set smartcase
set hlsearch
set incsearch
set scrolloff=1

" Don't do too many requests to slow file systems

if !has('win')
  set slowfs=curlftpfs
endif

" Set custom status line look

set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

" ------------------------------------------------------------------------------


" command! df df -h %m 2> /dev/null
" command! diff vim -d %f %F
" command! zip zip -r %f.zip %f
" command! tar tar cf %c.tar %c
" command! run !! ./%f
" command! make !!make %a
command! Mkcd :mkdir %a | cd %a
command! Diff :!diff %c %C
" command! vgrep vim "+grep %a"
" command! reload :write | restart



" ------------------------------------------------------------------------------

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
      \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Sample mappings

" Start shell in current directory
" nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in existing instance of gvim
" nnoremap o :!gvim --remote-tab-silent %f<cr>
" Open file in new instance of gvim
" nnoremap O :!gvim %f<cr>

" Open file in the background using its default program
" nnoremap gb :file &<cr>l

" Interaction with system clipboard
if executable('xclip')
  " copy name into clipboard
  nnoremap yn :!echo -n %c | xclip -selection "clipboard" %i<cr>
  " Yank current directory path into the clipboard
  nnoremap yd :!echo -n %d | xclip -selection clipboard %i<cr>
  " Yank current file path into the clipboard
  nnoremap yf :!echo -n %c:p | xclip -selection clipboard %i<cr>
endif

" Open editor to edit vifmrc and apply settings after returning to vifm
" nnoremap ,c :write | edit $MYVIFMRC | restart<cr>
" Open gvim to edit vifmrc
" nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
" nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f1> :!nvim %f<cr>
